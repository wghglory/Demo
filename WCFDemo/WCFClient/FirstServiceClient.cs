//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace IBLL
{
    using System.Runtime.Serialization;


//    [System.Diagnostics.DebuggerStepThroughAttribute()]
//    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
//    [System.Runtime.Serialization.DataContractAttribute(Name = "UserInfo", Namespace = "http://schemas.datacontract.org/2004/07/IBLL")]
//    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject
//    {

//        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

//        private int IdField;

//        private string NameField;

//        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
//        {
//            get
//            {
//                return this.extensionDataField;
//            }
//            set
//            {
//                this.extensionDataField = value;
//            }
//        }

//        [System.Runtime.Serialization.DataMemberAttribute()]
//        public int Id
//        {
//            get
//            {
//                return this.IdField;
//            }
//            set
//            {
//                this.IdField = value;
//            }
//        }

//        [System.Runtime.Serialization.DataMemberAttribute()]
//        public string Name
//        {
//            get
//            {
//                return this.NameField;
//            }
//            set
//            {
//                this.NameField = value;
//            }
//        }
//    }
//}


//[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IUserService")]
//public interface IUserService
//{

//    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IUserService/Show", ReplyAction = "http://tempuri.org/IUserService/ShowResponse")]
//    string Show();

//    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IUserService/Show", ReplyAction = "http://tempuri.org/IUserService/ShowResponse")]
//    System.Threading.Tasks.Task<string> ShowAsync();

//    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IUserService/GetUser", ReplyAction = "http://tempuri.org/IUserService/GetUserResponse")]
//    IBLL.UserInfo GetUser(string userId);

//    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IUserService/GetUser", ReplyAction = "http://tempuri.org/IUserService/GetUserResponse")]
//    System.Threading.Tasks.Task<IBLL.UserInfo> GetUserAsync(string userId);
//}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : IUserService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<IUserService>, IUserService
    {

        public UserServiceClient()
        {
        }

        public UserServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public UserServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public UserServiceClient(System.ServiceModel.Channels.Binding binding,
            System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public string Show()
        {
            return base.Channel.Show();
        }

        //public System.Threading.Tasks.Task<string> ShowAsync()
        //{
        //    return base.Channel.ShowAsync();
        //}

        public IBLL.UserInfo GetUser(string userId)
        {
            return base.Channel.GetUser(userId);
        }

        //public System.Threading.Tasks.Task<IBLL.UserInfo> GetUserAsync(string userId)
        //{
        //    return base.Channel.GetUserAsync(userId);
        //}
    }
}